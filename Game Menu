#include <iostream>
#include <iomanip>
#include <fstream>
using namespace std;

char displayMenu();
char difficultychoice();

int main()
{
    int x = ' ';
    while (x != '6')
    {
        system("CLS");
        x = displayMenu();
    }
}

void run(int x)
{
    int z = ' ';
    if (x == 1)
    {
        system("CLS");
        cout << "Easy Mode. Are You Ready?" << endl;
    }
    else if (x == 2)
    {
        system("CLS");
        cout << "Hard Mode. Are You Ready?" << endl;
    }
    else if (x == 3)
    {
        system("CLS");
        cout << "Expert Mode. Are You Ready?" << endl;
    }
    else if (x == 4)
    {
        system("CLS");
        int z = ' ';
        while (z != '5')
        {
            system("CLS");
            z = difficultychoice();
        }
    }
    else if (x == 5)
    {
        system("CLS");
        cout << "Logout?" << endl;
    }
    else
    {
        cout << "Incorrect Selection. Try Again." << endl;
    }
    system("pause");
}

void ran(int z)
{
    int n = 0;
    int m = 0;
    int scores[100000];

        if (z == 1)
        {
            system("CLS");
            // storing id and scores into text file
            ofstream fouts;
            fouts.open("ss.txt", fstream::app);
            if (fouts.is_open()) {
                fouts << endl << 15;
            }
            fouts.close();

            fstream fins;
            fins.open("ss.txt");
            while (!fins.eof()) {
                fins >> scores[m];
                m++;
            }
            fins.close();
            // size of array
            int size = sizeof(scores) / sizeof(scores[0]);
            int largest;
            cout << left << fixed;
            cout << setw(20) << "Position" << "Highscore\n";
            for (int a = 1; a <= 5; a++) {
                //storing first array element as largest value
                int x = 0;
                largest = scores[0];
                for (int i = 0; i < size; i++) {
                    if (largest < scores[i]) {
                        largest = scores[i];
                        x = i;
                    }
                }
                cout << setw(20) << a << largest << endl;
                std::copy(scores + (x + 1), scores + (size - 1), scores + x);
            }
        }
        else if (z == 2)
        {
            system("CLS");
            // storing id and scores into text file
            ofstream fouts;
            fouts.open("ss.txt", fstream::app);
            if (fouts.is_open()) {
                fouts << endl << 15;
            }
            fouts.close();

            fstream fins;
            fins.open("ss.txt");
            while (!fins.eof()) {
                fins >> scores[m];
                m++;
            }
            fins.close();
            // size of array
            int size = sizeof(scores) / sizeof(scores[0]);
            int largest;
            cout << left << fixed;
            cout << setw(20) << "Position" << "Highscore\n";
            for (int a = 1; a <= 5; a++) {
                //storing first array element as largest value
                int x = 0;
                largest = scores[0];
                for (int i = 0; i < size; i++) {
                    if (largest < scores[i]) {
                        largest = scores[i];
                        x = i;
                    }
                }
                cout << setw(20) << a << largest << endl;
                std::copy(scores + (x + 1), scores + (size - 1), scores + x);
            }
        }
        else if (z == 3)
        {
            system("CLS");
            // storing id and scores into text file
            ofstream fouts;
            fouts.open("ss.txt", fstream::app);
            if (fouts.is_open()) {
                fouts << endl << 15;
            }
            fouts.close();

            fstream fins;
            fins.open("ss.txt");
            while (!fins.eof()) {
                fins >> scores[m];
                m++;
            }
            fins.close();
            // size of array
            int size = sizeof(scores) / sizeof(scores[0]);
            int largest;
            cout << left << fixed;
            cout << setw(20) << "Position" << "Highscore\n";
            for (int a = 1; a <= 5; a++) {
                //storing first array element as largest value
                int x = 0;
                largest = scores[0];
                for (int i = 0; i < size; i++) {
                    if (largest < scores[i]) {
                        largest = scores[i];
                        x = i;
                    }
                }
                cout << setw(20) << a << largest << endl;
                std::copy(scores + (x + 1), scores + (size - 1), scores + x);
            }
        }
        else if (z == 4)
        {
        cout << "Return?" << endl;
        int x = ' ';
        while (x != '6')
        {
            system("CLS");
            x = displayMenu();
        }
        }
        else
        {
            cout << "Incorrect Selection. Try Again." << endl;
        }
        system("pause");
    }

char displayMenu()
{
    int x = ' ';
    cout << "Select Your Difficulty" << endl;
    cout << "1. Easy " << endl;
    cout << "2. Hard " << endl;
    cout << "3. Expert " << endl;
    cout << "4. Highscores" << endl;
    cout << "5. Return To Login" << endl;
    cin >> x;
    run(x);
    return x;
}

char difficultychoice()
{
    int z = ' ';
    cout << "Select Highscore" << endl;
    cout << "1. Easy " << endl;
    cout << "2. Hard " << endl;
    cout << "3. Expert" << endl;
    cout << "4. Return? " << endl;
    cin >> z;
    ran(z);
    return z;
}
